#include <iostream>
#include <fstream>
#include "Student.hpp"
#include "String.hpp"
using namespace std;
int main()
{
    cout << "This is the system SUSI! Do you want to open a file?" << endl;
    String s;
    /*ofstream iFile;
    if(s == "open")
    {
        string filePath;
        cin >> filePath;

        iFile.open(filePath, ios::out);
        ///check if opened cout a message its opened or cout not a valid path
        ///saving data to classes

        iFile.close();
    }
    else cout << "Not a valid command!" << endl;
    */
    Student students[16];
    int cnt = 0;
    while(1!=0)
    {
        cin >> s;
        if(s == "enroll")
        {
            String program, name;
            size_t group, fn;
            cin >> fn;
            cin.get();
            getline(cin, program);
            cin >> group;
            cin.get();
            getline(cin, name);
            Student newStudent(name, fn, group, program);
            students[cnt] = newStudent;
            cnt ++;
            students[cnt-1].print();
            cout << "bam" << endl;
        }
        cout << 1 << endl;
        /*else
        if(s == "advance")
        {
            size_t fn, numStudents = cnt;///using static ones
            cin >> fn;
            for(size_t i = 0; i < numStudents; i ++)
            {
                if(students[i].get_fn() == fn)
                {
                    students[i].advance();
                    break;
                }
            }
        }
        else
        if(s == "change")
        {
            size_t fn;
            string option;
            cin >> fn >> option;
            if(option == "program")
            {
                string value;
                cin >> value;

            }
        }
        else
        if(s == "graduate")
        {
            size_t fn, numStudents = cnt;///using static ones
            cin >> fn;
            for(size_t i = 0; i < numStudents; i ++)
            {
                if(students[i].get_fn() == fn)
                {
                    students[i].graduate();
                    break;
                }
            }
        }
        else
        if(s == "interrupt")
        {
            size_t fn, numStudents = cnt;///using static ones
            cin >> fn;
            for(size_t i = 0; i < numStudents; i ++)
            {
                if(students[i].get_fn() == fn)
                {
                    students[i].interrupt();
                    break;
                }
            }
        }
        else
        if(s == "resume")
        {
            size_t fn, numStudents = cnt;///using static ones
            cin >> fn;
            for(size_t i = 0; i < numStudents; i ++)
            {
                if(students[i].get_fn() == fn)
                {
                    students[i].resume();
                    break;
                }
            }
        }
        else
        if(s == "print")
        {
            size_t fn, numStudents = cnt;///using static ones
            cin >> fn;
            for(size_t i = 0; i < numStudents; i ++)
            {
                if(students[i].get_fn() == fn)
                {
                    students[i].print();
                    break;
                }
            }
        }
        else
        if(s == "printall")
        {
            String s1;
            size_t year, numStudents = cnt;///using static ones
            cin.get();
            getline(cin, s1);
            cin >> year;
            for(size_t i = 0; i < numStudents; i ++)
            {
                if(s1 == students[i].get_program() && year == students[i].get_year())
                    students[i].print();
                else cout <<"Test " << students[i].get_program() << " " << students[i].get_year() << endl;
            }
        }
        else
        if(s == "report")
        {
            size_t fn, numStudents = cnt;///using static ones
            cin >> fn;
            for(size_t i = 0; i < numStudents; i ++)
            {
                if(students[i].get_fn() == fn)
                {
                    students[i].report();
                    break;
                }
            }
        }*/
    }
    return 0;
}
